const knex = require("knex");
const path = require("path");
const pathToDb = path.resolve("./database/test_database.sqlite");

const dbClient = knex({
	client: "sqlite3",
	connection: {
		filename: pathToDb,
	},
	useNullAsDefault: true,
});

const {
	addPredictionId,
	findPredictionId,
	finishPredictionId,
} = require("../db-interactions/prediction-db");

const {
	addPredictionEntry,
	findPredictionEntry,
	updatePredictionEntry,
	finishPredictionEntry,
	findUsersInPrediction,
} = require("../db-interactions/prediction-entry-db");

const getPredictionByPredictionId = async (req, res, next) => {
	const predictionId = req.params.predictionId;

	const prediction = await findPredictionId(dbClient, predictionId);

	if (prediction === false) {
		return res.json({ message: "no prediction found with given id" });
	}
	return res.json({ prediction });
};

const getUsersByPredictionId = async (req, res, next) => {
	const predictionId = req.params.predictionId;
	const users = await findUsersInPrediction(dbClient, predictionId);
	return res.json({ users });
};

const createNewPredictionInGuildId = async (req, res, next) => {
	const { guildId, creatorId, predictionId, outcome_1, outcome_2 } = req.body;
	const newPrediction = await addPredictionId(
		dbClient,
		predictionId,
		guildId,
		creatorId,
		outcome_1,
		outcome_2
	);
	return res.json({ newPrediction });
};

const editPredictionByPredictionId = () => {};

const finishPredictionByPredictionId = async (req, res, next) => {
	const { predictionId, decided_outcome } = req.body;
	const finishedPrediction = await finishPredictionId(
		dbClient,
		predictionId,
		decided_outcome
	);
	return res.json({finishedPrediction});
};

module.exports = {
	getPredictionByPredictionId,
	getUsersByPredictionId,
	createNewPredictionInGuildId,
	editPredictionByPredictionId,
	finishPredictionByPredictionId,
};
